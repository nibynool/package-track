Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: ${file(config/config.yml):vpc.cidr}
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        -
          Key: Name
          Value:
            Fn::Join:
              - ''
              -
                - ${self:service}
                - ' '
                - ${self:provider.stage}
                - " VPC"
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        -
          Key: Name
          Value:
            Fn::Join:
              - ''
              -
                - ${self:service}
                - ' '
                - ${self:provider.stage}
                - " Internet Gateway"
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn:
      - VPC
      - InternetGateway
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      AvailabilityZone:
        "Fn::Select":
          - 0
          - "Fn::GetAZs": ''
      CidrBlock:
        "Fn::Select":
          - 0
          - "Fn::Cidr":
            - ${file(config/config.yml):vpc.cidr}
            - 256
            - 8
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: VPC
      Tags:
        -
          Key: Name
          Value:
            Fn::Join:
              - ''
              -
                - ${self:service}
                - ' '
                - ${self:provider.stage}
                - " Public Subnet 1"
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      AvailabilityZone:
        "Fn::Select":
          - 1
          - "Fn::GetAZs": ''
      CidrBlock:
        "Fn::Select":
        - 1
        - "Fn::Cidr":
          - ${file(config/config.yml):vpc.cidr}
          - 256
          - 8
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: VPC
      Tags:
        -
          Key: Name
          Value:
            Fn::Join:
              - ''
              -
                - ${self:service}
                - ' '
                - ${self:provider.stage}
                - " Public Subnet 2"
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      AvailabilityZone:
        "Fn::Select":
          - 0
          - "Fn::GetAZs": ''
      CidrBlock:
        "Fn::Select":
          - 2
          - "Fn::Cidr":
            - ${file(config/config.yml):vpc.cidr}
            - 256
            - 8
      MapPublicIpOnLaunch: false
      VpcId:
        Ref: VPC
      Tags:
        -
          Key: Name
          Value:
            Fn::Join:
              - ''
              -
                - ${self:service}
                - ' '
                - ${self:provider.stage}
                - " Private Subnet 1"
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      AvailabilityZone:
        "Fn::Select":
          - 1
          - "Fn::GetAZs": ''
      CidrBlock:
        "Fn::Select":
          - 3
          - "Fn::Cidr":
            - ${file(config/config.yml):vpc.cidr}
            - 256
            - 8
      MapPublicIpOnLaunch: false
      VpcId:
        Ref: VPC
      Tags:
        -
          Key: Name
          Value:
            Fn::Join:
              - ''
              -
                - ${self:service}
                - ' '
                - ${self:provider.stage}
                - " Private Subnet 2"
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
  NatGateway1:
    Type: AWS::EC2::NatGateway
    DependsOn:
      - PublicSubnet1
      - NatGateway1EIP
    Properties:
      AllocationId:
        "Fn::GetAtt": NatGateway1EIP.AllocationId
      SubnetId:
        Ref: PublicSubnet1
      Tags:
        -
          Key: Name
          Value:
            Fn::Join:
              - ''
              -
                - ${self:service}
                - ' '
                - ${self:provider.stage}
                - " NAT Gateway 1"
  NatGateway2:
    Type: AWS::EC2::NatGateway
    DependsOn:
      - PublicSubnet2
      - NatGateway2EIP
    Properties:
      AllocationId:
        "Fn::GetAtt": NatGateway2EIP.AllocationId
      SubnetId:
        Ref: PublicSubnet2
      Tags:
        -
          Key: Name
          Value:
            Fn::Join:
              - ''
              -
                - ${self:service}
                - ' '
                - ${self:provider.stage}
                - " NAT Gateway 2"
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: VPC
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        -
          Key: Name
          Value:
            Fn::Join:
              - ''
              -
                - ${self:service}
                - ' '
                - ${self:provider.stage}
                - " Public Route Table"
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - InternetGateway
      - PublicRouteTable
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PublicRouteTable
      - PublicSubnet1
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PublicRouteTable
      - PublicSubnet2
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet2
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    DependsOn: VPC
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        -
         Key: Name
         Value:
           Fn::Join:
           - ''
           -
             - ${self:service}
             - ' '
             - ${self:provider.stage}
             - " Private Route Table 1"
  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    DependsOn:
      - PrivateRouteTable1
      - NatGateway1
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId:
        Ref: PrivateRouteTable1
      NatGatewayId:
        Ref: NatGateway1
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PrivateRouteTable1
      - PrivateSubnet1
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable1
      SubnetId:
        Ref: PrivateSubnet1
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    DependsOn: VPC
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        -
          Key: Name
          Value:
            Fn::Join:
              - ''
              - - ${self:service}
                - ' '
                - ${self:provider.stage}
                - " Private Route Table 2"
  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn:
      - PrivateRouteTable2
      - NatGateway2
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway2
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PrivateRouteTable2
      - PrivateSubnet2
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable2
      SubnetId:
        Ref: PrivateSubnet2
  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn: VPC
    Properties:
      GroupName:
        Fn::Join:
          - ''
          -
            - ${self:service}
            - '-'
            - ${self:provider.stage}
            - "-no-ingress-sg"
      GroupDescription:
        Fn::Join:
          - ''
          -
            - "Security group with no ingress rule for "
            - ${self:service}
            - ' '
            - ${self:provider.stage}
            - ' environment'
      VpcId:
        Ref: VPC
      Tags:
        -
          Key: Name
          Value:
            Fn::Join:
            - ''
            - - ${self:service}
              - ' '
              - ${self:provider.stage}
              - " No Ingress Security Group"
